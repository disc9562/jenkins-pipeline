pipeline {
    agent any 
    
    environment {
        iOS_Device = '541BED44-E60D-498C-91D9-8E4F46186CC0'
        android1 = '25a4e830e41c7ece'
        ANDROID_HOME='/Users/jaylin/Library/Android/sdk'
        PATH="${ANDROID_HOME}/emulator:${ANDROID_HOME}/platform-tools:$PATH"

        // PATH='${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:$PATH'
    }


    stages {
        stage('iOS') { 
            steps {
                sh '''
                cd ~/Desktop/FoodTracker
                xcrun simctl boot $iOS_Device
                open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
                
                '''
                //xcodebuild test -project FoodTracker.xcodeproj -scheme FoodTracker -destination 'platform=iOS Simulator,name=iPhone XR,OS=12.1'
            }
            post{
                always{
                    sh'''
                    xcrun simctl shutdown $iOS_Device
                    '''
                }
            }
        }
        stage('Android'){
            parallel{
                stage('espresso'){
                    steps{
                        sh'''
                        source ~/.bash_profile
                        adb -s $android1 shell am instrument -w -r   -e debug false -e class 'com.example.garycheng.myapplication.DemoTest' com.example.garycheng.myapplication.test/android.support.test.runner.AndroidJUnitRunner
                        '''
                    }
                }
                stage('monkey test'){
                    steps{
                        startEmulator()

                        sh'''
                        cd ~/Desktop/android-monkey-quick-start
                        cd monkey-recorder && ./gradlew -q installDebug && cd -
                        cd monkey-test && ./gradlew -q installDebug installDebugAndroidTest && cd -
                        '''

                        sh 'mkdir -p output/monkey/'
                        sh 'adb -e install -r -g ~/Desktop/KKBOX.apk'

                        sh '''
                        adb -e shell am start -n com.kkbox.sqa.recorder/.MainActivity -a android.intent.action.RUN -d START
                        adb -e shell am instrument -w -e class com.kkbox.sqa.monkey.CalculatorTest#start com.kkbox.sqa.monkey.test/android.support.test.runner.AndroidJUnitRunner
                        '''

                        // run monkey
                        sh '''
                        adb -e shell am instrument -w -e class com.kkbox.sqa.monkey.KKBOX#login com.kkbox.sqa.monkey.test/android.support.test.runner.AndroidJUnitRunner
                        adb -e shell monkey -p com.skysoft.kkbox.android -v 5000 > output/monkey/monkey.log
                        sleep 10
                        '''

                        // screenshot
                        sh 'adb -e shell screencap /sdcard/monkey.png'

                        // stop recording
                        sh 'adb -e shell am start -n com.kkbox.sqa.recorder/.MainActivity -a android.intent.action.RUN -d STOP'      
                    }
                    post {
                        always {
                            // collecting logs
                            sh '''
                            adb -e bugreport > output/monkey/bugreport.log
                            adb -e pull /sdcard/monkey.png output/monkey/monkey.png
                            adb -e pull /sdcard/recorder.mp4 output/monkey/monkey.mp4
                            '''

                            // shutdown Android emulator
                            sh '''
                            ps -A | grep emulator | awk '{print $1}' | xargs kill -9 || true
                            '''

                            // JUnit xml
                            sh '''
                            
                            echo $PWD
                            python3 ~/Desktop/android-monkey-quick-start/monkey-to-junit.py output/monkey/monkey.log > output/monkey/monkey.xml
                            '''

                            junit "output/monkey/*.xml"
                            // FIXME: https://issues.jenkins-ci.org/browse/JENKINS-40561
                            // junit testDataPublishers: [[$class: 'TestDataPublisher']], testResults: 'output/monkey/monkey.xml'

                            // archive
                            dir('output/') { archiveArtifacts 'monkey/' }
                        }
                    }
                }
            }
        }
        stage('web'){
            steps{
                sh '''
                cd ~/Desktop/webtest
                npm run cypress
                '''
            }
        }
    }
}

def startEmulator() {
    // reset Android Emulator
    sh 'emulator -wipe-data @Nexus_4_API_23 &'

    // wait for booting
    sh '''
    retry=0
    while
        retry=$((retry+1))
        boot=`adb -e shell getprop init.svc.bootanim`
        if test $? -eq 0 && test "$boot" == 'stopped' ; then
            echo 'Emulator is ready'
            break
        fi
        if test $retry -ge 90 ; then
            echo 'Timeout (90 seconds) reached; failed to start emulator'
            break
        fi
        # check interval: 1 sec
        sleep 1
    do :; done
    '''
}